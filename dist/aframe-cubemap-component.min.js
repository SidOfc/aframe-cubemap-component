!function(e){function a(t){if(r[t])return r[t].exports;var n=r[t]={exports:{},id:t,loaded:!1};return e[t].call(n.exports,n,n.exports,a),n.loaded=!0,n.exports}var r={};return a.m=e,a.c=r,a.p="",a(0)}([function(e,a){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("cubemap",{schema:{folder:{type:"string"},edgeLength:{type:"int","default":5e3},nameMap:{type:"string"}},init:function(){var e=this.el,a=this.data,r=a.folder,t=[],n=["posx","negx","posy","negy","posz","negz"],o={posx:"posx",negx:"negx",posy:"posy",negy:"negy",posz:"posz",negz:"negz"};if(a.nameMap){name_map_array=a.nameMap.split(" ");for(var p=0,s=name_map_array.length;s>p;p++)name_map=name_map_array[p].split("="),o[name_map[0]]=name_map[1]}for(var m=0,i=n.length;i>m;m++)t[m]=o[n[m]]+".jpg";var d=new THREE.CubeTextureLoader;d.setPath(r);d.setCrossOrigin('anonymous');var g=d.load(t);g.format=THREE.RGBFormat;var f=THREE.ShaderLib.cube,u=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:f.uniforms,depthWrite:!1,side:THREE.BackSide}),h=u.clone();h.uniforms.tCube.value=g;var l=a.edgeLength,E=new THREE.CubeGeometry(l,l,l);e.setObject3D("mesh",new THREE.Mesh(E,h))}})}]);
